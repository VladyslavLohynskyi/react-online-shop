{"version":3,"sources":["rootReducer.js","store.js","components/hooks/useWindowSize.js","actions.js","components/Navbar/index.js","components/Header/index.js","components/Carrousel/index.js","components/Modal/index.js","components/SuccessAlert/index.js","components/Product/index.js","components/Products/index.js","components/Section/index.js","components/CartItem/index.js","components/Cart/index.js","components/Footer/index.js","components/App/index.js","index.js"],"names":["combineReducers","cart","state","action","product","type","exist","find","el","id","map","quantity","concat","filter","showCart","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","storeCart","createStore","persistor","persistStore","useWindowSize","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","addCart","connect","dispatch","openCart","className","countCartItems","reduce","acc","cur","countCartPrice","price","toFixed","to","length","onClick","Header","onOpenCart","click","setClick","width","Carrousel","main","current","setCurrent","slides","src","process","alt","additionalImages","useEffect","timer","setInterval","clearInterval","style","border","backgroundColor","Icon","disabled","float","name","slide","index","Modal","show","onClose","e","stopPropagation","title","description","SuccessAlert","onCloseSuccess","setTimeout","startTimer","clearTimeout","showModal","setShowModal","showSuccessModal","setShowSuccessModal","image","Products","onOpenSuccess","inputValue","setInputValue","productList","setProductList","sortedProductList","setSortedProductList","data","toLowerCase","includes","changeHandler","event","target","value","debouncedChangeHandler","useMemo","debounce","cancel","sort","a","b","onChange","Section","removeCart","closeCart","total","htmlFor","Footer","href","App","ReactDOM","render","store","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9fa413c8.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nfunction cartReducer(state = [], action) {\n  const { product } = action;\n  switch (action.type) {\n    case \"ADD_ITEM\": {\n      const exist = state.find((el) => el.id === product.id);\n      if (exist) {\n        return state.map((el) =>\n          el.id === product.id ? { ...exist, quantity: exist.quantity + 1 } : el\n        );\n      } else {\n        return state.concat({ ...product, quantity: 1 });\n      }\n    }\n    case \"REMOVE_ITEM\": {\n      const exist = state.find((el) => el.id === product.id);\n      if (exist.quantity === 1) {\n        return state.filter((el) => el.id !== product.id);\n      } else {\n        return state.map((el) =>\n          el.id === product.id ? { ...exist, quantity: exist.quantity - 1 } : el\n        );\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nfunction showCartReducer(state = [], action) {\n  switch (action.type) {\n    case \"OPEN_CART\": {\n      return true;\n    }\n    case \"CLOSE_CART\": {\n      return false;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  cart: cartReducer,\n  showCart: showCartReducer,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst initialStore = {\n  cart: [],\n  showCart: false,\n};\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst storeCart = createStore(persistedReducer, initialStore);\n\nexport const persistor = persistStore(storeCart);\n\nexport default storeCart;\n","import { useLayoutEffect, useState } from \"react\";\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\nexport default useWindowSize;\n","export function addCart(product) {\n  return { type: \"ADD_ITEM\", product };\n}\n\nexport function removeCart(product) {\n  return { type: \"REMOVE_ITEM\", product };\n}\n\nexport function openCart() {\n  return { type: \"OPEN_CART\" };\n}\n\nexport function closeCart() {\n  return { type: \"CLOSE_CART\" };\n}\n","import \"./index.css\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport { connect } from \"react-redux\";\nimport { openCart } from \"../../actions\";\n\nconst mapState = (state) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    openCart: () => dispatch(openCart()),\n  };\n};\n\nconst Navbar = ({ className, cart, openCart }) => {\n  const countCartItems = cart.reduce((acc, cur) => acc + cur.quantity, 0);\n\n  const countCartPrice = cart\n    .reduce((acc, cur) => acc + cur.price * cur.quantity, 0)\n    .toFixed(2);\n  return (\n    <ul className={className}>\n      <li>\n        <Link to=\"/#home\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/#products\">Products</Link>\n      </li>\n      <li>\n        <Link to=\"/#contacts\">Contacts</Link>\n      </li>\n      <li\n        className={\n          cart.length === 0 ? \"display-none cart-button\" : \"cart-button\"\n        }\n        onClick={() => openCart()}\n      >\n        Cart{\" \"}\n        <div className=\"cart-badget\">\n          {countCartItems + \"   $\" + countCartPrice}\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default connect(mapState, mapDispatch)(Navbar);\n","import \"./index.css\";\nimport { useState } from \"react\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport Navbar from \"../Navbar\";\n\nconst Header = ({ onOpenCart }) => {\n  const [click, setClick] = useState(false);\n  const width = useWindowSize()[0];\n  const handleClickBurger = () => {\n    click ? setClick(false) : setClick(true);\n  };\n  return (\n    <div className=\"header-burger-nav\">\n      <div className=\"header\">\n        <h1>Stickerz</h1>\n        <nav>\n          {width > 720 ? (\n            <Navbar onOpenCart={onOpenCart} className=\"navbar-standart\" />\n          ) : null}\n          <div className=\"box\" onClick={handleClickBurger}>\n            <div className=\"burger\"></div>\n          </div>\n        </nav>\n      </div>\n      {width <= 720 && click ? (\n        <Navbar onOpenCart={onOpenCart} className=\"navbar-burger\" />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect } from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./index.css\";\n\nconst Carrousel = ({ main, product }) => {\n  const [current, setCurrent] = useState(0);\n\n  let slides = [\n    <div>\n      <h2>\n        Welcome to <br /> Stickerz\n      </h2>\n      <h3>Best sticker in world</h3>\n      <hr />\n      <p>Buy with discount today</p>\n      <button>\n        <Link to=\"/#products\">Start shopping</Link>\n      </button>\n    </div>,\n    <img\n      src={process.env.PUBLIC_URL + \"/assets/baby-yoda.svg\"}\n      alt=\"Baby Yoda\"\n    />,\n    <img src={process.env.PUBLIC_URL + \"/assets/girl.svg\"} alt=\"Girl\" />,\n  ];\n  if (!main) {\n    slides = product.additionalImages.map((el) => <img src={el} alt=\"Cats\" />);\n  }\n\n  const nextSlider = () => {\n    if (current === slides.length - 1) {\n      setCurrent(0);\n    } else {\n      setCurrent(current + 1);\n    }\n  };\n  const prevSlider = () => {\n    if (current === 0) {\n      setCurrent(slides.length - 1);\n    } else {\n      setCurrent(current - 1);\n    }\n  };\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      current === slides.length - 1 ? setCurrent(0) : setCurrent(current + 1);\n    }, 5000);\n    return () => clearInterval(timer);\n  });\n\n  return (\n    <div className=\"containerCarrousel\">\n      <button\n        style={{ border: \"none\", backgroundColor: \"transparent\" }}\n        onClick={prevSlider}\n      >\n        <Icon\n          disabled\n          size=\"huge\"\n          style={{ float: \"right\" }}\n          className=\"icon\"\n          name=\"angle left\"\n        />\n      </button>\n      {slides.map((slide, index) => (\n        <div\n          className={index === current ? \"slide active\" : \"slide\"}\n          key={index}\n        >\n          {index === current && slide}\n        </div>\n      ))}\n      <button\n        style={{ border: \"none\", backgroundColor: \"transparent\" }}\n        onClick={nextSlider}\n      >\n        <Icon disabled size=\"huge\" className=\"icon\" name=\"angle right\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Carrousel;\n","import \"./index.css\";\nimport Carrousel from \"../Carrousel\";\nconst Modal = ({ product, show, onClose }) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h4 className=\"modal-title\">Product info</h4>\n          <button onClick={onClose}>Close</button>\n        </div>\n        <div className=\"modal-body\">\n          <Carrousel main={false} product={product} />\n          <h3>{product.title}</h3>\n          <p>{product.description}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import \"./index.css\";\n\nconst SuccessAlert = ({ show, onCloseSuccess }) => {\n  if (!show) {\n    return null;\n  }\n\n  const timer = setTimeout(() => onCloseSuccess(), 3000);\n  function startTimer() {\n    if (show) {\n      return timer;\n    }\n  }\n  startTimer();\n\n  return (\n    <div className=\"modalAlert\" onClick={() => onCloseSuccess()}>\n      <div\n        className=\"modal-contentAlert\"\n        onClick={(e) => {\n          e.stopPropagation();\n          clearTimeout(timer);\n        }}\n      >\n        <h3>Product added to cart</h3>\n        <button onClick={() => onCloseSuccess()}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessAlert;\n","import \"./index.css\";\nimport Modal from \"../Modal\";\nimport SuccessAlert from \"../SuccessAlert\";\nimport { useState } from \"react\";\nimport { addCart } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatch = (dispatch) => {\n  return {\n    addCart: (product) => dispatch(addCart(product)),\n  };\n};\n\nconst mapState = (state) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst Product = ({ product, addCart }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  return (\n    <div>\n      <div className=\"product-card\">\n        <img src={process.env.PUBLIC_URL + product.image} alt={product.title} />\n        <div>\n          <h3>{product.title}</h3>\n          <p>{product.description}</p>\n          <div className=\"card-buttons\">\n            <button className=\"button-info\" onClick={() => setShowModal(true)}>\n              Info\n            </button>\n            <button\n              className=\"button-buy\"\n              onClick={() => {\n                addCart(product);\n                setShowSuccessModal(true);\n              }}\n            >\n              ${product.price} - buy\n            </button>\n          </div>\n        </div>\n      </div>\n      <Modal\n        product={product}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n      />\n      <SuccessAlert\n        show={showSuccessModal}\n        onCloseSuccess={() => setShowSuccessModal(false)}\n      />\n    </div>\n  );\n};\n\nexport default connect(mapState, mapDispatch)(Product);\n","import { useState, useEffect, useMemo } from \"react\";\nimport Product from \"../Product\";\n\nimport \"./index.css\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport data from \"../../products.json\";\nimport debounce from \"lodash.debounce\";\n\nconst Products = ({ onOpenSuccess }) => {\n  const width = useWindowSize()[0];\n  const [inputValue, setInputValue] = useState(\"\");\n  const [productList, setProductList] = useState([]);\n  const [sortedProductList, setSortedProductList] = useState([]);\n\n  useEffect(() => setProductList([...data]), []);\n\n  const currentGrid = () => {\n    if (width <= 574) {\n      return 1;\n    }\n    if (width > 574 && width <= 751) {\n      return 2;\n    }\n    if (width > 751 && width <= 993) {\n      return 3;\n    }\n    return 4;\n  };\n\n  useEffect(() => {\n    if (inputValue !== \"\") {\n      setSortedProductList(\n        productList.filter((el) => {\n          return el.title.toLowerCase().includes(inputValue.toLowerCase());\n        })\n      );\n    }\n  }, [inputValue, productList]);\n\n  const changeHandler = (event) => {\n    if (event.target.value.length > 2) {\n      setInputValue(event.target.value);\n    }\n  };\n\n  const debouncedChangeHandler = useMemo(\n    () => debounce(changeHandler, 1000),\n    []\n  );\n\n  useEffect(() => {\n    return () => {\n      debouncedChangeHandler.cancel();\n    };\n  }, [debouncedChangeHandler]);\n\n  const sortAscendingButton = () => {\n    setSortedProductList(\n      productList.concat().sort((a, b) => a.price - b.price)\n    );\n  };\n\n  const sortDescendingButton = () => {\n    setSortedProductList(\n      productList.concat().sort((a, b) => b.price - a.price)\n    );\n  };\n\n  const outputProducts = () => {\n    if (sortedProductList.length > 0) {\n      return sortedProductList;\n    }\n    return productList;\n  };\n\n  return (\n    <div id={\"products\"}>\n      <h3>Products</h3>\n      <div>\n        <button onClick={sortAscendingButton}>Ascending button</button>\n        <button onClick={sortDescendingButton}>Descending button</button>\n        <input type=\"text\" onChange={debouncedChangeHandler} />\n      </div>\n      <div className={`product-list${currentGrid()}`}>\n        {outputProducts().map((product) => (\n          <Product\n            key={product.id}\n            product={product}\n            onOpenSuccess={onOpenSuccess}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n","import Carrousel from \"../Carrousel\";\nimport Products from \"../Products\";\n\nconst Section = ({ onOpenSuccess }) => {\n  return (\n    <div>\n      <Carrousel main={true} />\n      <Products onOpenSuccess={onOpenSuccess} />\n    </div>\n  );\n};\n\nexport default Section;\n","import \"./index.css\";\nimport { addCart, removeCart } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst mapDispatch = (dispatch) => {\n  return {\n    addCart: (product) => dispatch(addCart(product)),\n    removeCart: (product) => dispatch(removeCart(product)),\n  };\n};\n\nconst mapState = (state) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst CartItem = ({ el, addCart, removeCart }) => {\n  return (\n    <div className=\"cart-product\">\n      <p>{el.title}</p>\n      <p>{el.price}</p>\n      <p>{el.quantity}</p>\n      <div>\n        <button\n          style={{ border: \"none\", backgroundColor: \"transparent\" }}\n          onClick={() => addCart(el)}\n        >\n          <Icon disabled size=\"small\" className=\"icon\" name=\"plus\" />\n        </button>\n        <button\n          style={{ border: \"none\", backgroundColor: \"transparent\" }}\n          onClick={() => removeCart(el)}\n        >\n          <Icon disabled size=\"small\" className=\"icon\" name=\"minus\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapState, mapDispatch)(CartItem);\n","import \"./index.css\";\nimport CartItem from \"../CartItem\";\nimport { closeCart } from \"../../actions\";\nimport { connect } from \"react-redux\";\nconst mapState = (state) => {\n  return {\n    cart: state.cart,\n    showCart: state.showCart,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    closeCart: () => dispatch(closeCart()),\n  };\n};\n\nconst Cart = ({ showCart, closeCart, cart }) => {\n  const total = cart.reduce((acc, cur) => acc + cur.price * cur.quantity, 0);\n  return (\n    <div\n      className={!showCart ? \"display-none modal\" : \"modal\"}\n      onClick={closeCart}\n    >\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h4 className=\"modal-title\">Cart</h4>\n          <button onClick={closeCart}>Close</button>\n        </div>\n        <div className=\"cart-body\">\n          <div className=\"cart-products\">\n            <div className=\"title-cart\">\n              <p>Product</p>\n              <p>Price</p>\n              <p>Quantity</p>\n              <p />\n            </div>\n            <div className=\"cart-product-list\">\n              {cart.map((el) => (\n                <CartItem key={el.id} el={el} />\n              ))}\n            </div>\n            <div className=\"total\">Total ${total.toFixed(2)}</div>\n          </div>\n          <form className=\"cart-form\">\n            <label htmlFor=\"name\">Your name:</label>\n            <input type=\"text\" id=\"name\" />\n            <label htmlFor=\"email\">Your email:</label>\n            <input type=\"text\" id=\"email\" />\n          </form>\n        </div>\n        <div className=\"cart-footer\">\n          <button onClick={closeCart}>Close</button>\n          <button onClick={closeCart}>Order</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapState, mapDispatch)(Cart);\n","const Footer = () => {\n  return (\n    <div >\n      <h3>Contact Us</h3>\n      <p>\n        Copyright by{\" \"}\n        <a href=\"https://github.com/VladyslavLohynskyi\">Vladyslav Lohynskyi</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Header from \"../Header\";\nimport Section from \"../Section\";\nimport Cart from \"../Cart\";\n\nimport \"./index.css\";\nimport Footer from \"../Footer\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header></Header>\n      <Section id={\"home\"} />\n      <Footer id={\"contacts\"} />\n      <Cart />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport storeCart, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={storeCart}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}